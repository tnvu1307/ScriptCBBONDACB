SET DEFINE OFF;
CREATE OR REPLACE PROCEDURE prc_focmdcode_option(P_REFCURSOR IN OUT PKG_REPORT.REF_CURSOR, P_OPTION VARCHAR2, P_ERR_CODE IN OUT VARCHAR2, P_ERR_PARAM IN OUT VARCHAR2)
AS
  PKGCTX PLOG.LOG_CTX;
  LOGROW TLOGDEBUG%ROWTYPE;
  L_OBJNAME VARCHAR2(100);
BEGIN
    PLOG.SETBEGINSECTION(PKGCTX, 'PRC_FOCMDCODE_OPTION');

    P_ERR_CODE  := SYSTEMNUMS.C_SUCCESS;
    P_ERR_PARAM := 'SUCCESS';

    FOR RECJS IN (
        SELECT JT.*
        FROM (
            SELECT P_OPTION JSON FROM DUAL
        ) DT,
        JSON_TABLE
        (
            DT.JSON, '$' COLUMNS
            (
                OBJNAME VARCHAR2(200)PATH '$.OBJNAME'
            )
        ) AS JT
    ) LOOP
        L_OBJNAME := RECJS.OBJNAME;
    END LOOP;

    OPEN P_REFCURSOR FOR
    SELECT A.CMDCODE, A.CMDTEXT, A.CMDUSE, A.CMDTYPE, A.CMDDESC
    FROM FOCMDCODE A
    WHERE A.CMDUSE = 'Y'
    AND OBJNAME LIKE NVL(L_OBJNAME,'%');

    PLOG.SETENDSECTION(PKGCTX, 'PRC_FOCMDCODE_OPTION');
EXCEPTION WHEN OTHERS THEN
    P_ERR_CODE := ERRNUMS.C_SYSTEM_ERROR;
    PLOG.ERROR(PKGCTX,'ERR: ' || SQLERRM || ' TRACE: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );
    PLOG.SETENDSECTION(PKGCTX, 'PRC_FOCMDCODE_OPTION');
END PRC_FOCMDCODE_OPTION;
/
